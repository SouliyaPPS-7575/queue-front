/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ProfileImport } from './routes/profile'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as IndexImport } from './routes/index'
import { Route as ServiceIndexImport } from './routes/service/index'
import { Route as QueueIndexImport } from './routes/queue/index'
import { Route as EventIndexImport } from './routes/event/index'
import { Route as ContactIndexImport } from './routes/contact/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as VerifyEmailEmailImport } from './routes/verify-email.$email'
import { Route as QueueViewEventIDImport } from './routes/queue/view.$eventID'
import { Route as EventViewEventIDImport } from './routes/event/view.$eventID'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServiceIndexRoute = ServiceIndexImport.update({
  id: '/service/',
  path: '/service/',
  getParentRoute: () => rootRoute,
} as any)

const QueueIndexRoute = QueueIndexImport.update({
  id: '/queue/',
  path: '/queue/',
  getParentRoute: () => rootRoute,
} as any)

const EventIndexRoute = EventIndexImport.update({
  id: '/event/',
  path: '/event/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyEmailEmailRoute = VerifyEmailEmailImport.update({
  id: '/verify-email/$email',
  path: '/verify-email/$email',
  getParentRoute: () => rootRoute,
} as any)

const QueueViewEventIDRoute = QueueViewEventIDImport.update({
  id: '/queue/view/$eventID',
  path: '/queue/view/$eventID',
  getParentRoute: () => rootRoute,
} as any)

const EventViewEventIDRoute = EventViewEventIDImport.update({
  id: '/event/view/$eventID',
  path: '/event/view/$eventID',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/verify-email/$email': {
      id: '/verify-email/$email'
      path: '/verify-email/$email'
      fullPath: '/verify-email/$email'
      preLoaderRoute: typeof VerifyEmailEmailImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof rootRoute
    }
    '/event/': {
      id: '/event/'
      path: '/event'
      fullPath: '/event'
      preLoaderRoute: typeof EventIndexImport
      parentRoute: typeof rootRoute
    }
    '/queue/': {
      id: '/queue/'
      path: '/queue'
      fullPath: '/queue'
      preLoaderRoute: typeof QueueIndexImport
      parentRoute: typeof rootRoute
    }
    '/service/': {
      id: '/service/'
      path: '/service'
      fullPath: '/service'
      preLoaderRoute: typeof ServiceIndexImport
      parentRoute: typeof rootRoute
    }
    '/event/view/$eventID': {
      id: '/event/view/$eventID'
      path: '/event/view/$eventID'
      fullPath: '/event/view/$eventID'
      preLoaderRoute: typeof EventViewEventIDImport
      parentRoute: typeof rootRoute
    }
    '/queue/view/$eventID': {
      id: '/queue/view/$eventID'
      path: '/queue/view/$eventID'
      fullPath: '/queue/view/$eventID'
      preLoaderRoute: typeof QueueViewEventIDImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/verify-email/$email': typeof VerifyEmailEmailRoute
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/event': typeof EventIndexRoute
  '/queue': typeof QueueIndexRoute
  '/service': typeof ServiceIndexRoute
  '/event/view/$eventID': typeof EventViewEventIDRoute
  '/queue/view/$eventID': typeof QueueViewEventIDRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/verify-email/$email': typeof VerifyEmailEmailRoute
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/event': typeof EventIndexRoute
  '/queue': typeof QueueIndexRoute
  '/service': typeof ServiceIndexRoute
  '/event/view/$eventID': typeof EventViewEventIDRoute
  '/queue/view/$eventID': typeof QueueViewEventIDRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/verify-email/$email': typeof VerifyEmailEmailRoute
  '/about/': typeof AboutIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/event/': typeof EventIndexRoute
  '/queue/': typeof QueueIndexRoute
  '/service/': typeof ServiceIndexRoute
  '/event/view/$eventID': typeof EventViewEventIDRoute
  '/queue/view/$eventID': typeof QueueViewEventIDRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/profile'
    | '/signup'
    | '/verify-email/$email'
    | '/about'
    | '/contact'
    | '/event'
    | '/queue'
    | '/service'
    | '/event/view/$eventID'
    | '/queue/view/$eventID'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/profile'
    | '/signup'
    | '/verify-email/$email'
    | '/about'
    | '/contact'
    | '/event'
    | '/queue'
    | '/service'
    | '/event/view/$eventID'
    | '/queue/view/$eventID'
  id:
    | '__root__'
    | '/'
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/profile'
    | '/signup'
    | '/verify-email/$email'
    | '/about/'
    | '/contact/'
    | '/event/'
    | '/queue/'
    | '/service/'
    | '/event/view/$eventID'
    | '/queue/view/$eventID'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  VerifyEmailEmailRoute: typeof VerifyEmailEmailRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  EventIndexRoute: typeof EventIndexRoute
  QueueIndexRoute: typeof QueueIndexRoute
  ServiceIndexRoute: typeof ServiceIndexRoute
  EventViewEventIDRoute: typeof EventViewEventIDRoute
  QueueViewEventIDRoute: typeof QueueViewEventIDRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  VerifyEmailEmailRoute: VerifyEmailEmailRoute,
  AboutIndexRoute: AboutIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  EventIndexRoute: EventIndexRoute,
  QueueIndexRoute: QueueIndexRoute,
  ServiceIndexRoute: ServiceIndexRoute,
  EventViewEventIDRoute: EventViewEventIDRoute,
  QueueViewEventIDRoute: QueueViewEventIDRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot-password",
        "/login",
        "/logout",
        "/profile",
        "/signup",
        "/verify-email/$email",
        "/about/",
        "/contact/",
        "/event/",
        "/queue/",
        "/service/",
        "/event/view/$eventID",
        "/queue/view/$eventID"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/verify-email/$email": {
      "filePath": "verify-email.$email.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/contact/": {
      "filePath": "contact/index.tsx"
    },
    "/event/": {
      "filePath": "event/index.tsx"
    },
    "/queue/": {
      "filePath": "queue/index.tsx"
    },
    "/service/": {
      "filePath": "service/index.tsx"
    },
    "/event/view/$eventID": {
      "filePath": "event/view.$eventID.tsx"
    },
    "/queue/view/$eventID": {
      "filePath": "queue/view.$eventID.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
